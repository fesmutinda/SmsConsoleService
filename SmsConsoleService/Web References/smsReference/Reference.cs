//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SmsConsoleService.smsReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SURESMSSERVICE_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE")]
    public partial class SURESMSSERVICE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ChargeSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmSentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PollPendingSMSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SURESMSSERVICE() {
            this.Url = global::SmsConsoleService.Properties.Settings.Default.SmsConsoleService_smsReference_SURESMSSERVICE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ChargeSMSCompletedEventHandler ChargeSMSCompleted;
        
        /// <remarks/>
        public event ConfirmSentCompletedEventHandler ConfirmSentCompleted;
        
        /// <remarks/>
        public event PollPendingSMSCompletedEventHandler PollPendingSMSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE:ChargeSMS", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", ResponseElementName="ChargeSMS_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChargeSMS() {
            this.Invoke("ChargeSMS", new object[0]);
        }
        
        /// <remarks/>
        public void ChargeSMSAsync() {
            this.ChargeSMSAsync(null);
        }
        
        /// <remarks/>
        public void ChargeSMSAsync(object userState) {
            if ((this.ChargeSMSOperationCompleted == null)) {
                this.ChargeSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeSMSOperationCompleted);
            }
            this.InvokeAsync("ChargeSMS", new object[0], this.ChargeSMSOperationCompleted, userState);
        }
        
        private void OnChargeSMSOperationCompleted(object arg) {
            if ((this.ChargeSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE:ConfirmSent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", ResponseElementName="ConfirmSent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmSent(string telephoneNo, int status) {
            object[] results = this.Invoke("ConfirmSent", new object[] {
                        telephoneNo,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmSentAsync(string telephoneNo, int status) {
            this.ConfirmSentAsync(telephoneNo, status, null);
        }
        
        /// <remarks/>
        public void ConfirmSentAsync(string telephoneNo, int status, object userState) {
            if ((this.ConfirmSentOperationCompleted == null)) {
                this.ConfirmSentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmSentOperationCompleted);
            }
            this.InvokeAsync("ConfirmSent", new object[] {
                        telephoneNo,
                        status}, this.ConfirmSentOperationCompleted, userState);
        }
        
        private void OnConfirmSentOperationCompleted(object arg) {
            if ((this.ConfirmSentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmSentCompleted(this, new ConfirmSentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE:PollPendingSMS", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", ResponseElementName="PollPendingSMS_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SURESMSSERVICE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PollPendingSMS() {
            object[] results = this.Invoke("PollPendingSMS", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PollPendingSMSAsync() {
            this.PollPendingSMSAsync(null);
        }
        
        /// <remarks/>
        public void PollPendingSMSAsync(object userState) {
            if ((this.PollPendingSMSOperationCompleted == null)) {
                this.PollPendingSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPollPendingSMSOperationCompleted);
            }
            this.InvokeAsync("PollPendingSMS", new object[0], this.PollPendingSMSOperationCompleted, userState);
        }
        
        private void OnPollPendingSMSOperationCompleted(object arg) {
            if ((this.PollPendingSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PollPendingSMSCompleted(this, new PollPendingSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChargeSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ConfirmSentCompletedEventHandler(object sender, ConfirmSentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmSentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmSentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PollPendingSMSCompletedEventHandler(object sender, PollPendingSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PollPendingSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PollPendingSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591